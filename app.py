import streamlit as st
from supabase import create_client, Client
from datetime import datetime

# --- Load secrets ---
SUPABASE_URL = st.secrets["supabase_url"]
SUPABASE_KEY = st.secrets["supabase_key"]

# --- Connect to Supabase ---
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

# --- Page config ---
st.set_page_config("üíß ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥", layout="centered")
st.title("üíß ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡πâ‡∏≤‡∏ô")

# --- Load house list ---
@st.cache_data
def load_houses():
    res = supabase.table("houses").select("*").execute()
    return res.data

houses = load_houses()
address_list = [h["address"] for h in houses]

# --- UI ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô ---
selected_address = st.selectbox("üè† ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô", address_list)

# ‡∏´‡∏≤ previous_meter ‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏±‡πâ‡∏ô
selected_house = next((h for h in houses if h["address"] == selected_address), None)
if selected_house is None:
    st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡πâ‡∏≤‡∏ô")
    st.stop()

previous_meter = selected_house["previous_meter"]
st.info(f"üîÅ ‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {previous_meter}")

# --- ‡∏Å‡∏£‡∏≠‡∏Å‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà ---
current_meter = st.number_input("üì• ‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô", min_value=previous_meter, step=1.0)

if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡πâ‡∏≥
    units_used = current_meter - previous_meter
    price = calculate_price(units_used)

    # --- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á water_usage ---
    supabase.table("water_usage").insert({
        "address": selected_address,
        "previous_meter": previous_meter,
        "current_meter": current_meter,
        "units_used": units_used,
        "price": price,
        "created_at": datetime.utcnow().isoformat()
    }).execute()

    # --- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï previous_meter ‡πÉ‡∏ô houses ---
    supabase.table("houses").update({
        "previous_meter": current_meter
    }).eq("id", selected_house["id"]).execute()

    st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ‡πÉ‡∏ä‡πâ {units_used} ‡∏´‡∏ô‡πà‡∏ß‡∏¢ = {price:.2f} ‡∏ö‡∏≤‡∏ó")

# --- ‡∏™‡∏π‡∏ï‡∏£‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡πâ‡∏≥ (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢) ---
def calculate_price(units):
    return units * 10  # ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
